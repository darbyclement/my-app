{"version":3,"sources":["components/Calculator.jsx","components/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","state","weight","showCalc","watermelon","apples","coconuts","updateInput","bind","handleSubmit","event","this","setState","target","value","console","log","w","wa","a","c","className","Typography","variant","Box","m","noValidate","autoComplete","Input","id","placeholder","onChange","inputProps","Button","color","onClick","React","Component","Home","component","Link","to","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7d0cdcc.chunk.js","sourcesContent":["import { Button, Typography, Box, TextField, Input } from '@material-ui/core';\nimport React from 'react'\n\n\nexport default class Calculator extends React.Component  {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            weight : '',\n            showCalc : false,\n            watermelon : '',\n            apples : '',\n            coconuts : ''\n        }\n        this.updateInput = this.updateInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    updateInput(event){\n        this.setState({weight : event.target.value})\n    }\n        \n        \n    handleSubmit(){\n        this.setState({showCalc : true})\n        console.log('Your input value is: ' + this.state.weight)\n        console.log('Your input value is: ' + this.state.showCalc)\n\n        var w = this.state.weight;\n        var wa = 0;\n        var a = 0;\n        var c = 0;\n        while ((w - 20) >= 0) {\n            w -= 20;\n            wa += 1;\n        }\n\n        while ((w - 3) >= 0) {\n            w -= 3;\n            c += 2;\n        }\n\n\n        while ((w - 1) >= 0) {\n            w -= 1;\n            a += 3;\n        }\n\n        this.setState({watermelon : wa})\n        this.setState({apples : a})\n        this.setState({coconuts : c})\n\n    }\n\n    render () {\n        return (\n        <div className=\"App\">\n            <Typography variant = 'h1'>\n                HOW MANY FRUITS?????\n            </Typography>\n            <Box m = {10}>\n                <form noValidate autoComplete=\"off\">\n                    <Input id = 'weight' placeholder=\"Your Weight Here!!!\" onChange={this.updateInput} inputProps={{ 'aria-label': 'description' }} />\n                </form>\n            </Box>\n            <Box>\n                <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>\n                    <Typography variant = 'h3'>\n                        CALCULATE MY FRUITS\n                    </Typography>\n                </Button>\n            </Box>\n\n        {this.state.showCalc ?\n            <Box m = {10}>\n                {this.state.watermelon ? \n                    <Typography variant = 'h3'>\n                        {this.state.watermelon} Watermelon\n                    </Typography> : null}\n\n                {this.state.apples ||  this.state.coconuts ? \n                    <Typography variant = 'h4'>     \n                    and\n                    </Typography> : null\n                }\n\n                {this.state.coconuts ? \n                    <Typography variant = 'h3'>     \n                    {this.state.coconuts} Coconuts\n                    </Typography> : null\n                }\n\n                {this.state.apples ?  \n                    <Typography variant = 'h4'>     \n                    and\n                    </Typography> : null\n                }\n\n                {this.state.apples ? \n                    <Typography variant = 'h3'>     \n                    {this.state.apples} Apples\n                    </Typography> : null\n                }\n            </Box> : null\n        }\n\n        </div>\n        )\n    };\n}\n","import { Button, Typography, Box } from '@material-ui/core';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams\n  } from \"react-router-dom\";\nimport { spacing } from '@material-ui/system';\n\nfunction Home() {\n    return(\n    <div className=\"App\">\n      <Box m = {10}>\n        <Typography variant = 'h1'> \n            How Many Fruits Do I Weigh?\n        </Typography>\n      </Box>\n        <Button variant=\"outlined\" color=\"primary\" component={Link} to=\"/my-app/calculator\">\n          <Typography variant = 'h3'>\n          Get Started\n          </Typography>\n        </Button>\n    </div>\n\n    );\n\n}\n\nexport default Home;\n\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport Calculator from \"./components/Calculator.jsx\"\nimport Home from \"./components/Home.jsx\"\nimport { Button, Typography, Box } from '@material-ui/core';\nimport { spacing } from '@material-ui/system';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path='/my-app/' component={Home} />\n      <Route exact path='/my-app/calculator' component={Calculator} />\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}